{
  "contractName": "OrmrOracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "queryId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nrbytes",
          "type": "uint8"
        }
      ],
      "name": "GetRandom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetResult",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nrbytes\",\"type\":\"uint8\"}],\"name\":\"GetRandom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetResult\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queryId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/OrmrOracle.sol\":\"OrmrOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/OrmrOracle.sol\":{\"keccak256\":\"0xc24642e6e852f3e54dc560873b5d3ee1ba45f26d6b3c52eebe9ec866e4cebca8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06ab28d52cb661e2d974cc8187bcb0563f0df1d46a9962eb8a99ba464def9711\",\"dweb:/ipfs/QmemUkBENgUfraz3WhxjwXNULZGxUb2u7Xqi1rpjVJ9Bbn\"]},\"/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/provableAPI.sol\":{\"keccak256\":\"0xd4402a074d4da697791ed2e70fb254754d9c8a1182e118ad4bf7e4d1b9605234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3a61e21e7bfdacb74dae89424780229f2404387cc37c46a5656d6ebd4cb4a2\",\"dweb:/ipfs/QmTTsNTULLLWzFrtgKX8o6P3qDK8Mkjn9N2gQ8JjG29LTs\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5062000027603060f81b6200002d60201b60201c565b62000a21565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620000bd57506000620000bb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200036c60201b60201c565b145b15620000d757620000d560006200037760201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200014257600080fd5b505af115801562000157573d6000803e3d6000fd5b505050506040513d60208110156200016e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620002ba57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200023d57600080fd5b505af115801562000252573d6000803e3d6000fd5b505050506040513d60208110156200026957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200035057600080fd5b505af115801562000365573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000620003896200039060201b60201c565b9050919050565b600080620003b8731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200036c60201b60201c565b11156200046457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200045a6040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506200095f60201b60201c565b600190506200095c565b60006200048b73c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200036c60201b60201c565b1115620005375773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200052d6040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506200095f60201b60201c565b600190506200095c565b60006200055e73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200036c60201b60201c565b11156200060a5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006006040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506200095f60201b60201c565b600190506200095c565b60006200063173146500cfd35b22e4a392fe0adc06de1a1368ed486200036c60201b60201c565b1115620006dd5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006d36040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506200095f60201b60201c565b600190506200095c565b60006200070473a2998efd205fb9d4b4963afb70778d6354ad3a416200036c60201b60201c565b1115620007b05773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007a66040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506200095f60201b60201c565b600190506200095c565b6000620007d7736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200036c60201b60201c565b11156200083d57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506200095c565b6000620008647320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200036c60201b60201c565b1115620008ca577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506200095c565b6000620008f17351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200036c60201b60201c565b111562000957577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506200095c565b600090505b90565b8060029080519060200190620009779291906200097b565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620009be57805160ff1916838001178555620009ef565b82800160010185558215620009ef579182015b82811115620009ee578251825591602001919060010190620009d1565b5b509050620009fe919062000a02565b5090565b5b8082111562000a1d57600081600090555060010162000a03565b5090565b61388b8062000a316000396000f3fe6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c5780633f1be4d414610295578063446dd971146102c057806365372147146102f15780639a7d9af114610381575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610411565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061046b565b005b3480156102a157600080fd5b506102aa61052e565b6040518082815260200191505060405180910390f35b6102ef600480360360208110156102d657600080fd5b81019080803560ff169060200190929190505050610534565b005b3480156102fd57600080fd5b5061030661054f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034657808201518184015260208101905061032b565b50505050905090810190601f1680156103735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038d57600080fd5b506103966105ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d65780820151818401526020810190506103bb565b50505050905090810190601f1680156104035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104678282600067ffffffffffffffff8111801561042e57600080fd5b506040519080825280601f01601f1916602001820160405280156104615781602001600182028036833780820191505090505b5061046b565b5050565b61047361068f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104aa57600080fd5b60006104b78484846109ac565b60ff1614156104dc5781600590805190602001906104d6929190613637565b50610529565b6040518060400160405280600581526020017f4572726f72000000000000000000000000000000000000000000000000000000815250600590805190602001906105279291906136b7565b505b505050565b60065481565b61054660008260ff1662030d40610adc565b60068190555050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e55780601f106105ba576101008083540402835291602001916105e5565b820191906000526020600020905b8154815290600101906020018083116105c857829003601f168201915b505050505081565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106855780601f1061065a57610100808354040283529160200191610685565b820191906000526020600020905b81548152906001019060200180831161066857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061071757506000610715600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b1561072857610726600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561088957600080fd5b505af115801561089d573d6000803e3d6000fd5b505050506040513d60208110156108b357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b505050506040513d602081101561099657600080fd5b8101908080519060200190929190505050905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106109dc57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610a6f57507f500000000000000000000000000000000000000000000000000000000000000082600181518110610a3f57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610a9b5750600160ff1682600281518110610a8757fe5b602001015160f81c60f81b60f81c60ff1614155b15610aa95760019050610ad5565b6000610abe838686610ab961111d565b6111bf565b905080610acf576002915050610ad5565b60009150505b9392505050565b60008083118015610aee575060208311155b610af757600080fd5b600a840293506060600167ffffffffffffffff81118015610b1757600080fd5b506040519080825280601f01601f191660200182016040528015610b4a5781602001600182028036833780820191505090505b5090508360f81b81600081518110610b5e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610ba757600080fd5b506040519080825280601f01601f191660200182016040528015610bda5781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610bf757600080fd5b506040519080825280601f01601f191660200182016040528015610c2a5781602001600182028036833780820191505090505b5090506000610c376118de565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610c6f57600080fd5b506040519080825280601f01601f191660200182016040528015610ca25781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610cc557600080fd5b506040519080825280601f01601f191660200182016040528015610cf85781602001600182028036833780820191505090505b509050610d0b8260186008846000611bf9565b50610d14613737565b60405180608001604052808781526020018881526020018681526020018481525090506000610d796040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611c58565b90506060600867ffffffffffffffff81118015610d9557600080fd5b506040519080825280601f01601f191660200182016040528015610dc85781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506110ee828285600160048110610f0757fe5b6020020151600287600060048110610f1b57fe5b60200201516040518082805190602001908083835b60208310610f535780518252602082019150602081019050602083039250610f30565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610f95573d6000803e3d6000fd5b5050506040513d6020811015610faa57600080fd5b810190808051906020019092919050505087600260048110610fc857fe5b60200201516040516020018085805190602001908083835b602083106110035780518252602082019150602081019050602083039250610fe0565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106110545780518252602082019150602081019050602083039250611031565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106110ab5780518252602082019150602081019050602083039250611088565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611fdb565b8199505050505050505050509392505050565b6000813b9050919050565b6000611116611ff7565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111b55780601f1061118a576101008083540402835291602001916111b5565b820191906000526020600020905b81548152906001019060200180831161119857829003601f168201915b5050505050905090565b60008060206002876045815181106111d357fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff8111801561120557600080fd5b506040519080825280601f01601f1916602001820160405280156112385781602001600182028036833780820191505090505b50905061124a87836020846000611bf9565b50600284876040516020018083805190602001908083835b602083106112855780518252602082019150602081019050602083039250611262565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106112f357805182526020820191506020810190506020830392506112d0565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611335573d6000803e3d6000fd5b5050506040513d602081101561134a57600080fd5b81019080805190602001909291905050506040516020018082815260200191505060405160208183030381529060405280519060200120818051906020012014611399576000925050506118d6565b606060028860016049860101815181106113af57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff811180156113d757600080fd5b506040519080825280601f01601f19166020018201604052801561140a5781602001600182028036833780820191505090505b50905061141f88604985018351846000611bf9565b506114ea6002826040518082805190602001908083835b602083106114595780518252602082019150602081019050602083039250611436565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561149b573d6000803e3d6000fd5b5050506040513d60208110156114b057600080fd5b8101908080519060200190929190505050878a60086020880101815181106114d457fe5b602001015160f81c60f81b60f81c60ff1661254e565b6114fa57600093505050506118d6565b6060602967ffffffffffffffff8111801561151457600080fd5b506040519080825280601f01601f1916602001820160405280156115475781602001600182028036833780820191505090505b50905061155c89602086016029846000611bf9565b506060604067ffffffffffffffff8111801561157757600080fd5b506040519080825280601f01601f1916602001820160405280156115aa5781602001600182028036833780820191505090505b50905060006041845160296020890101010190506115d08b604083036040856000611bf9565b5060006002836040518082805190602001908083835b6020831061160957805182526020820191506020810190506020830392506115e6565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561164b573d6000803e3d6000fd5b5050506040513d602081101561166057600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106116ab5780518252602082019150602081019050602083039250611688565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561172357600360008c815260200190815260200160002060009055611733565b60009750505050505050506118d6565b6060604967ffffffffffffffff8111801561174d57600080fd5b506040519080825280601f01601f1916602001820160405280156117805781602001600182028036833780820191505090505b5090506117928d896049846000611bf9565b5061183b6002826040518082805190602001908083835b602083106117cc57805182526020820191506020810190506020830392506117a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561180e573d6000803e3d6000fd5b5050506040513d602081101561182357600080fd5b810190808051906020019092919050505087866125fb565b611850576000985050505050505050506118d6565b6004600083815260200190815260200160002060009054906101000a900460ff166118aa5761187f8d846127e7565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061196657506000611964600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b1561197757611975600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119e157600080fd5b505af11580156119f5573d6000803e3d6000fd5b505050506040513d6020811015611a0b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b5357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ad857600080fd5b505af1158015611aec573d6000803e3d6000fd5b505050506040513d6020811015611b0257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bb957600080fd5b505afa158015611bcd573d6000803e3d6000fd5b505050506040513d6020811015611be357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611c1057600080fd5b600086602001905060008460200190505b868860200101821015611c495781890151808288015250602082019150602081019050611c21565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ce057506000611cde600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b15611cf157611cef600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d5b57600080fd5b505af1158015611d6f573d6000803e3d6000fd5b505050506040513d6020811015611d8557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ecd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e5257600080fd5b505af1158015611e66573d6000803e3d6000fd5b505050506040513d6020811015611e7c57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff81118015611ee757600080fd5b50604051908082528060200260200182016040528015611f1b57816020015b6060815260200190600190039081611f065790505b50905083600060048110611f2b57fe5b602002015181600081518110611f3d57fe5b602002602001018190525083600160048110611f5557fe5b602002015181600181518110611f6757fe5b602002602001018190525083600260048110611f7f57fe5b602002015181600281518110611f9157fe5b602002602001018190525083600360048110611fa957fe5b602002015181600381518110611fbb57fe5b6020026020010181905250611fd1858285612c73565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612017731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611101565b11156120b957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120b06040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506131d3565b6001905061254b565b60006120d873c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611101565b111561217a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121716040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061219973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611101565b111561223b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122326040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061225a73146500cfd35b22e4a392fe0adc06de1a1368ed48611101565b11156122fc5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122f36040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061231b73a2998efd205fb9d4b4963afb70778d6354ad3a41611101565b11156123bd5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123b46040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506131d3565b6001905061254b565b60006123dc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611101565b111561244057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b600061245f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611101565b11156124c3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b60006124e27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611101565b1115612546577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b600090505b90565b600080600190508284511461256257600080fd5b60005b838110156125ef5784818151811061257957fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106125b257fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146125e257600091505b8080600101915050612565565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561261d57600080fd5b506040519080825280601f01601f1916602001820160405280156126505781602001600182028036833780820191505090505b509050600060208960038151811061266457fe5b602001015160f81c60f81b60f81c60ff1603600401905061268a89826020856000611bf9565b91506060602067ffffffffffffffff811180156126a657600080fd5b506040519080825280601f01601f1916602001820160405280156126d95781602001600182028036833780820191505090505b5090506022820191506127158a60208c60018603815181106126f757fe5b602001015160f81c60f81b60f81c60ff160384016020846000611bf9565b905060208301519450602081015193506127328b601b87876131ed565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614156127885760019750505050505050506127e0565b6127958b601c87876131ed565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106127fd57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561282557600080fd5b506040519080825280601f01601f1916602001820160405280156128585781602001600182028036833780820191505090505b50905061286a85858351846000611bf9565b506060604067ffffffffffffffff8111801561288557600080fd5b506040519080825280601f01601f1916602001820160405280156128b85781602001600182028036833780820191505090505b5090506128cb8660046040846000611bf9565b506060606267ffffffffffffffff811180156128e657600080fd5b506040519080825280601f01601f1916602001820160405280156129195781602001600182028036833780820191505090505b509050600160f81b8160008151811061292e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061296f87604188036041846001611bf9565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c81525090506129ba8160006020856042611bf9565b50612a636002836040518082805190602001908083835b602083106129f457805182526020820191506020810190506020830392506129d1565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612a36573d6000803e3d6000fd5b5050506040513d6020811015612a4b57600080fd5b810190808051906020019092919050505085856125fb565b945084612a7857600095505050505050612c6d565b60606040518060600160405280604081526020016138166040913990506060604267ffffffffffffffff81118015612aaf57600080fd5b506040519080825280601f01601f191660200182016040528015612ae25781602001600182028036833780820191505090505b50905060fe60f81b81600081518110612af757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612b368a60036041846001611bf9565b50606060028b604581518110612b4857fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612b7057600080fd5b506040519080825280601f01601f191660200182016040528015612ba35781602001600182028036833780820191505090505b509050612bb68b60448351846000611bf9565b50612c5f6002836040518082805190602001908083835b60208310612bf05780518252602082019150602081019050602083039250612bcd565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612c32573d6000803e3d6000fd5b5050506040513d6020811015612c4757600080fd5b810190808051906020019092919050505082856125fb565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612cfb57506000612cf9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b15612d0c57612d0a600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d7657600080fd5b505af1158015612d8a573d6000803e3d6000fd5b505050506040513d6020811015612da057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ee857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612e6d57600080fd5b505af1158015612e81573d6000803e3d6000fd5b505050506040513d6020811015612e9757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612f7e578082015181840152602081019050612f63565b50505050905090810190601f168015612fab5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612fcb57600080fd5b505af1158015612fdf573d6000803e3d6000fd5b505050506040513d6020811015612ff557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613028576000801b9150506131cc565b606061303385613231565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156130d65780820151818401526020810190506130bb565b50505050905090810190601f1680156131035780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561313c578082015181840152602081019050613121565b50505050905090810190601f1680156131695780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561318b57600080fd5b505af115801561319f573d6000803e3d6000fd5b50505050506040513d60208110156131b657600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906131e992919061375e565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061323b6132ae565b6132436137de565b61324f816104006132ba565b61325881613304565b60005b83518110156132975761328a84828151811061327357fe5b60200260200101518361331290919063ffffffff16565b808060010191505061325b565b506132a181613337565b8060000151915050919050565b60405180590338823950565b60008190506000602082816132cb57fe5b06146132e457602081816132db57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61330f816004613345565b50565b61331f8260028351613366565b61333281836134a690919063ffffffff16565b505050565b613342816007613345565b50565b613362601f60058360ff16901b178361355190919063ffffffff16565b5050565b601781116133925761338d8160058460ff16901b60ff16178461355190919063ffffffff16565b6134a1565b60ff81116133d3576133b7601860058460ff16901b178461355190919063ffffffff16565b6133cd816001856135919092919063ffffffff16565b506134a0565b61ffff8111613415576133f9601960058460ff16901b178461355190919063ffffffff16565b61340f816002856135919092919063ffffffff16565b5061349f565b63ffffffff81116134595761343d601a60058460ff16901b178461355190919063ffffffff16565b613453816004856135919092919063ffffffff16565b5061349e565b67ffffffffffffffff811161349d57613485601b60058460ff16901b178461355190919063ffffffff16565b61349b816008856135919092919063ffffffff16565b505b5b5b5b5b505050565b6134ae6137de565b826020015183600001515183510111156134de576134dd8360026134d7866020015186516135f8565b02613614565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106135255781518352602083019250602082019150602081039050613502565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111561357757613576826002846020015102613614565b5b815180516020818301018381536001820183525050505050565b6135996137de565b8360200151846000015151830111156135c7576135c68460026135c08760200151866135f8565b02613614565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561360a5782905061360e565b8190505b92915050565b60608260000151905061362783836132ba565b61363183826134a6565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061367857805160ff19168380011785556136a6565b828001600101855582156136a6579182015b828111156136a557825182559160200191906001019061368a565b5b5090506136b391906137f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136f857805160ff1916838001178555613726565b82800160010185558215613726579182015b8281111561372557825182559160200191906001019061370a565b5b50905061373391906137f8565b5090565b60405180608001604052806004905b60608152602001906001900390816137465790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061379f57805160ff19168380011785556137cd565b828001600101855582156137cd579182015b828111156137cc5782518255916020019190600101906137b1565b5b5090506137da91906137f8565b5090565b604051806040016040528060608152602001600081525090565b5b808211156138115760008160009055506001016137f9565b509056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212203a29e5db79f922ad7cb42509ff53f1621040fa7b8d57c0939243f3853724bb7a64736f6c63430007000033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806327dc297e1461005a57806338bbfa501461012c5780633f1be4d414610295578063446dd971146102c057806365372147146102f15780639a7d9af114610381575b600080fd5b34801561006657600080fd5b5061012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610411565b005b34801561013857600080fd5b506102936004803603606081101561014f57600080fd5b81019080803590602001909291908035906020019064010000000081111561017657600080fd5b82018360208201111561018857600080fd5b803590602001918460018302840111640100000000831117156101aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020d57600080fd5b82018360208201111561021f57600080fd5b8035906020019184600183028401116401000000008311171561024157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061046b565b005b3480156102a157600080fd5b506102aa61052e565b6040518082815260200191505060405180910390f35b6102ef600480360360208110156102d657600080fd5b81019080803560ff169060200190929190505050610534565b005b3480156102fd57600080fd5b5061030661054f565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561034657808201518184015260208101905061032b565b50505050905090810190601f1680156103735780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561038d57600080fd5b506103966105ed565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103d65780820151818401526020810190506103bb565b50505050905090810190601f1680156104035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104678282600067ffffffffffffffff8111801561042e57600080fd5b506040519080825280601f01601f1916602001820160405280156104615781602001600182028036833780820191505090505b5061046b565b5050565b61047361068f565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104aa57600080fd5b60006104b78484846109ac565b60ff1614156104dc5781600590805190602001906104d6929190613637565b50610529565b6040518060400160405280600581526020017f4572726f72000000000000000000000000000000000000000000000000000000815250600590805190602001906105279291906136b7565b505b505050565b60065481565b61054660008260ff1662030d40610adc565b60068190555050565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105e55780601f106105ba576101008083540402835291602001916105e5565b820191906000526020600020905b8154815290600101906020018083116105c857829003601f168201915b505050505081565b606060058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106855780601f1061065a57610100808354040283529160200191610685565b820191906000526020600020905b81548152906001019060200180831161066857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061071757506000610715600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b1561072857610726600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561079257600080fd5b505af11580156107a6573d6000803e3d6000fd5b505050506040513d60208110156107bc57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090457600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561088957600080fd5b505af115801561089d573d6000803e3d6000fd5b505050506040513d60208110156108b357600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561096c57600080fd5b505af1158015610980573d6000803e3d6000fd5b505050506040513d602081101561099657600080fd5b8101908080519060200190929190505050905090565b60007f4c00000000000000000000000000000000000000000000000000000000000000826000815181106109dc57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141580610a6f57507f500000000000000000000000000000000000000000000000000000000000000082600181518110610a3f57fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b80610a9b5750600160ff1682600281518110610a8757fe5b602001015160f81c60f81b60f81c60ff1614155b15610aa95760019050610ad5565b6000610abe838686610ab961111d565b6111bf565b905080610acf576002915050610ad5565b60009150505b9392505050565b60008083118015610aee575060208311155b610af757600080fd5b600a840293506060600167ffffffffffffffff81118015610b1757600080fd5b506040519080825280601f01601f191660200182016040528015610b4a5781602001600182028036833780820191505090505b5090508360f81b81600081518110610b5e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506060602067ffffffffffffffff81118015610ba757600080fd5b506040519080825280601f01601f191660200182016040528015610bda5781602001600182028036833780820191505090505b5090506060602067ffffffffffffffff81118015610bf757600080fd5b506040519080825280601f01601f191660200182016040528015610c2a5781602001600182028036833780820191505090505b5090506000610c376118de565b9050602083524241186001430340186020840152602082528060208301526060602067ffffffffffffffff81118015610c6f57600080fd5b506040519080825280601f01601f191660200182016040528015610ca25781602001600182028036833780820191505090505b5090508860208201526060600867ffffffffffffffff81118015610cc557600080fd5b506040519080825280601f01601f191660200182016040528015610cf85781602001600182028036833780820191505090505b509050610d0b8260186008846000611bf9565b50610d14613737565b60405180608001604052808781526020018881526020018681526020018481525090506000610d796040518060400160405280600681526020017f72616e646f6d0000000000000000000000000000000000000000000000000000815250838c611c58565b90506060600867ffffffffffffffff81118015610d9557600080fd5b506040519080825280601f01601f191660200182016040528015610dc85781602001600182028036833780820191505090505b50905060208401517f0100000000000000000000000000000000000000000000000000000000000000810460278301537e01000000000000000000000000000000000000000000000000000000000000810460268301537d010000000000000000000000000000000000000000000000000000000000810460258301537c0100000000000000000000000000000000000000000000000000000000810460248301537b01000000000000000000000000000000000000000000000000000000810460238301537a0100000000000000000000000000000000000000000000000000008104602283015379010000000000000000000000000000000000000000000000000081046021830153780100000000000000000000000000000000000000000000000081046020830153506110ee828285600160048110610f0757fe5b6020020151600287600060048110610f1b57fe5b60200201516040518082805190602001908083835b60208310610f535780518252602082019150602081019050602083039250610f30565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015610f95573d6000803e3d6000fd5b5050506040513d6020811015610faa57600080fd5b810190808051906020019092919050505087600260048110610fc857fe5b60200201516040516020018085805190602001908083835b602083106110035780518252602082019150602081019050602083039250610fe0565b6001836020036101000a03801982511681845116808217855250505050505090500184805190602001908083835b602083106110545780518252602082019150602081019050602083039250611031565b6001836020036101000a03801982511681845116808217855250505050505090500183815260200182805190602001908083835b602083106110ab5780518252602082019150602081019050602083039250611088565b6001836020036101000a03801982511681845116808217855250505050505090500194505050505060405160208183030381529060405280519060200120611fdb565b8199505050505050505050509392505050565b6000813b9050919050565b6000611116611ff7565b9050919050565b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111b55780601f1061118a576101008083540402835291602001916111b5565b820191906000526020600020905b81548152906001019060200180831161119857829003601f168201915b5050505050905090565b60008060206002876045815181106111d357fe5b602001015160f81c60f81b60f81c60ff16016044010190506060602067ffffffffffffffff8111801561120557600080fd5b506040519080825280601f01601f1916602001820160405280156112385781602001600182028036833780820191505090505b50905061124a87836020846000611bf9565b50600284876040516020018083805190602001908083835b602083106112855780518252602082019150602081019050602083039250611262565b6001836020036101000a038019825116818451168082178552505050505050905001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106112f357805182526020820191506020810190506020830392506112d0565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015611335573d6000803e3d6000fd5b5050506040513d602081101561134a57600080fd5b81019080805190602001909291905050506040516020018082815260200191505060405160208183030381529060405280519060200120818051906020012014611399576000925050506118d6565b606060028860016049860101815181106113af57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff811180156113d757600080fd5b506040519080825280601f01601f19166020018201604052801561140a5781602001600182028036833780820191505090505b50905061141f88604985018351846000611bf9565b506114ea6002826040518082805190602001908083835b602083106114595780518252602082019150602081019050602083039250611436565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561149b573d6000803e3d6000fd5b5050506040513d60208110156114b057600080fd5b8101908080519060200190929190505050878a60086020880101815181106114d457fe5b602001015160f81c60f81b60f81c60ff1661254e565b6114fa57600093505050506118d6565b6060602967ffffffffffffffff8111801561151457600080fd5b506040519080825280601f01601f1916602001820160405280156115475781602001600182028036833780820191505090505b50905061155c89602086016029846000611bf9565b506060604067ffffffffffffffff8111801561157757600080fd5b506040519080825280601f01601f1916602001820160405280156115aa5781602001600182028036833780820191505090505b50905060006041845160296020890101010190506115d08b604083036040856000611bf9565b5060006002836040518082805190602001908083835b6020831061160957805182526020820191506020810190506020830392506115e6565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561164b573d6000803e3d6000fd5b5050506040513d602081101561166057600080fd5b8101908080519060200190929190505050905083816040516020018083805190602001908083835b602083106116ab5780518252602082019150602081019050602083039250611688565b6001836020036101000a0380198251168184511680821785525050505050509050018281526020019250505060405160208183030381529060405280519060200120600360008d815260200190815260200160002054141561172357600360008c815260200190815260200160002060009055611733565b60009750505050505050506118d6565b6060604967ffffffffffffffff8111801561174d57600080fd5b506040519080825280601f01601f1916602001820160405280156117805781602001600182028036833780820191505090505b5090506117928d896049846000611bf9565b5061183b6002826040518082805190602001908083835b602083106117cc57805182526020820191506020810190506020830392506117a9565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa15801561180e573d6000803e3d6000fd5b5050506040513d602081101561182357600080fd5b810190808051906020019092919050505087866125fb565b611850576000985050505050505050506118d6565b6004600083815260200190815260200160002060009054906101000a900460ff166118aa5761187f8d846127e7565b6004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6004600083815260200190815260200160002060009054906101000a900460ff16985050505050505050505b949350505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061196657506000611964600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b1561197757611975600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156119e157600080fd5b505af11580156119f5573d6000803e3d6000fd5b505050506040513d6020811015611a0b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b5357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611ad857600080fd5b505af1158015611aec573d6000803e3d6000fd5b505050506040513d6020811015611b0257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663abaa5f3e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bb957600080fd5b505afa158015611bcd573d6000803e3d6000fd5b505050506040513d6020811015611be357600080fd5b8101908080519060200190929190505050905090565b6060600082850190508084511015611c1057600080fd5b600086602001905060008460200190505b868860200101821015611c495781890151808288015250602082019150602081019050611c21565b85935050505095945050505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480611ce057506000611cde600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b15611cf157611cef600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611d5b57600080fd5b505af1158015611d6f573d6000803e3d6000fd5b505050506040513d6020811015611d8557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ecd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015611e5257600080fd5b505af1158015611e66573d6000803e3d6000fd5b505050506040513d6020811015611e7c57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6060600467ffffffffffffffff81118015611ee757600080fd5b50604051908082528060200260200182016040528015611f1b57816020015b6060815260200190600190039081611f065790505b50905083600060048110611f2b57fe5b602002015181600081518110611f3d57fe5b602002602001018190525083600160048110611f5557fe5b602002015181600181518110611f6757fe5b602002602001018190525083600260048110611f7f57fe5b602002015181600281518110611f9157fe5b602002602001018190525083600360048110611fa957fe5b602002015181600381518110611fbb57fe5b6020026020010181905250611fd1858285612c73565b9150509392505050565b8060036000848152602001908152602001600020819055505050565b600080612017731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611101565b11156120b957731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506120b06040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506131d3565b6001905061254b565b60006120d873c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611101565b111561217a5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506121716040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061219973b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611101565b111561223b5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122326040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061225a73146500cfd35b22e4a392fe0adc06de1a1368ed48611101565b11156122fc5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506122f36040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506131d3565b6001905061254b565b600061231b73a2998efd205fb9d4b4963afb70778d6354ad3a41611101565b11156123bd5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506123b46040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506131d3565b6001905061254b565b60006123dc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611101565b111561244057736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b600061245f7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611101565b11156124c3577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b60006124e27351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611101565b1115612546577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905061254b565b600090505b90565b600080600190508284511461256257600080fd5b60005b838110156125ef5784818151811061257957fe5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168682602081106125b257fe5b1a60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146125e257600091505b8080600101915050612565565b50809150509392505050565b60008060008060006060602067ffffffffffffffff8111801561261d57600080fd5b506040519080825280601f01601f1916602001820160405280156126505781602001600182028036833780820191505090505b509050600060208960038151811061266457fe5b602001015160f81c60f81b60f81c60ff1603600401905061268a89826020856000611bf9565b91506060602067ffffffffffffffff811180156126a657600080fd5b506040519080825280601f01601f1916602001820160405280156126d95781602001600182028036833780820191505090505b5090506022820191506127158a60208c60018603815181106126f757fe5b602001015160f81c60f81b60f81c60ff160384016020846000611bf9565b905060208301519450602081015193506127328b601b87876131ed565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff1614156127885760019750505050505050506127e0565b6127958b601c87876131ed565b80975081985050508573ffffffffffffffffffffffffffffffffffffffff16898051906020012060001c73ffffffffffffffffffffffffffffffffffffffff16149750505050505050505b9392505050565b600080606060028560018601815181106127fd57fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff8111801561282557600080fd5b506040519080825280601f01601f1916602001820160405280156128585781602001600182028036833780820191505090505b50905061286a85858351846000611bf9565b506060604067ffffffffffffffff8111801561288557600080fd5b506040519080825280601f01601f1916602001820160405280156128b85781602001600182028036833780820191505090505b5090506128cb8660046040846000611bf9565b506060606267ffffffffffffffff811180156128e657600080fd5b506040519080825280601f01601f1916602001820160405280156129195781602001600182028036833780820191505090505b509050600160f81b8160008151811061292e57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061296f87604188036041846001611bf9565b5060606040518060400160405280602081526020017ffd94fa71bc0ba10d39d464d0d8f465efeef0a2764e3887fcc9df41ded20f505c81525090506129ba8160006020856042611bf9565b50612a636002836040518082805190602001908083835b602083106129f457805182526020820191506020810190506020830392506129d1565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612a36573d6000803e3d6000fd5b5050506040513d6020811015612a4b57600080fd5b810190808051906020019092919050505085856125fb565b945084612a7857600095505050505050612c6d565b60606040518060600160405280604081526020016138166040913990506060604267ffffffffffffffff81118015612aaf57600080fd5b506040519080825280601f01601f191660200182016040528015612ae25781602001600182028036833780820191505090505b50905060fe60f81b81600081518110612af757fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612b368a60036041846001611bf9565b50606060028b604581518110612b4857fe5b602001015160f81c60f81b60f81c60ff160167ffffffffffffffff81118015612b7057600080fd5b506040519080825280601f01601f191660200182016040528015612ba35781602001600182028036833780820191505090505b509050612bb68b60448351846000611bf9565b50612c5f6002836040518082805190602001908083835b60208310612bf05780518252602082019150602081019050602083039250612bcd565b6001836020036101000a038019825116818451168082178552505050505050905001915050602060405180830381855afa158015612c32573d6000803e3d6000fd5b5050506040513d6020811015612c4757600080fd5b810190808051906020019092919050505082856125fb565b975087985050505050505050505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480612cfb57506000612cf9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611101565b145b15612d0c57612d0a600061110c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612d7657600080fd5b505af1158015612d8a573d6000803e3d6000fd5b505050506040513d6020811015612da057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612ee857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612e6d57600080fd5b505af1158015612e81573d6000803e3d6000fd5b505050506040513d6020811015612e9757600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632ef3accc86856040518363ffffffff1660e01b81526004018080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015612f7e578082015181840152602081019050612f63565b50505050905090810190601f168015612fab5780820380516001836020036101000a031916815260200191505b509350505050602060405180830381600087803b158015612fcb57600080fd5b505af1158015612fdf573d6000803e3d6000fd5b505050506040513d6020811015612ff557600080fd5b81019080805190602001909291905050509050823a02670de0b6b3a764000001811115613028576000801b9150506131cc565b606061303385613231565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c55c1cb68360008985896040518663ffffffff1660e01b8152600401808581526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156130d65780820151818401526020810190506130bb565b50505050905090810190601f1680156131035780820380516001836020036101000a031916815260200191505b50838103825285818151815260200191508051906020019080838360005b8381101561313c578082015181840152602081019050613121565b50505050905090810190601f1680156131695780820380516001836020036101000a031916815260200191505b5096505050505050506020604051808303818588803b15801561318b57600080fd5b505af115801561319f573d6000803e3d6000fd5b50505050506040513d60208110156131b657600080fd5b8101908080519060200190929190505050925050505b9392505050565b80600290805190602001906131e992919061375e565b5050565b60008060008060405188815287602082015286604082015285606082015260208160808360006001610bb8f192508051915050818193509350505094509492505050565b606061323b6132ae565b6132436137de565b61324f816104006132ba565b61325881613304565b60005b83518110156132975761328a84828151811061327357fe5b60200260200101518361331290919063ffffffff16565b808060010191505061325b565b506132a181613337565b8060000151915050919050565b60405180590338823950565b60008190506000602082816132cb57fe5b06146132e457602081816132db57fe5b06602003810190505b808360200181815250506040518084526000815281810160405250505050565b61330f816004613345565b50565b61331f8260028351613366565b61333281836134a690919063ffffffff16565b505050565b613342816007613345565b50565b613362601f60058360ff16901b178361355190919063ffffffff16565b5050565b601781116133925761338d8160058460ff16901b60ff16178461355190919063ffffffff16565b6134a1565b60ff81116133d3576133b7601860058460ff16901b178461355190919063ffffffff16565b6133cd816001856135919092919063ffffffff16565b506134a0565b61ffff8111613415576133f9601960058460ff16901b178461355190919063ffffffff16565b61340f816002856135919092919063ffffffff16565b5061349f565b63ffffffff81116134595761343d601a60058460ff16901b178461355190919063ffffffff16565b613453816004856135919092919063ffffffff16565b5061349e565b67ffffffffffffffff811161349d57613485601b60058460ff16901b178461355190919063ffffffff16565b61349b816008856135919092919063ffffffff16565b505b5b5b5b5b505050565b6134ae6137de565b826020015183600001515183510111156134de576134dd8360026134d7866020015186516135f8565b02613614565b5b60008060008451905085518051602081830101945086518101825260208701935050505b602081106135255781518352602083019250602082019150602081039050613502565b60006001826020036101000a039050801983511681855116818117865250508694505050505092915050565b8160200151600183600001515101111561357757613576826002846020015102613614565b5b815180516020818301018381536001820183525050505050565b6135996137de565b8360200151846000015151830111156135c7576135c68460026135c08760200151866135f8565b02613614565b5b60006001836101000a0390508451805184818301018684198251161781528582018352505050849150509392505050565b60008183111561360a5782905061360e565b8190505b92915050565b60608260000151905061362783836132ba565b61363183826134a6565b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061367857805160ff19168380011785556136a6565b828001600101855582156136a6579182015b828111156136a557825182559160200191906001019061368a565b5b5090506136b391906137f8565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106136f857805160ff1916838001178555613726565b82800160010185558215613726579182015b8281111561372557825182559160200191906001019061370a565b5b50905061373391906137f8565b5090565b60405180608001604052806004905b60608152602001906001900390816137465790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061379f57805160ff19168380011785556137cd565b828001600101855582156137cd579182015b828111156137cc5782518255916020019190600101906137b1565b5b5090506137da91906137f8565b5090565b604051806040016040528060608152602001600081525090565b5b808211156138115760008160009055506001016137f9565b509056fe7fb956469c5c9b89840d55b43537e66a98dd4811ea0a27224272c2e5622911e8537a2f8e86a46baec82864e98dd01e9ccc2f8bc5dfc9cbe5a91a290498dd96e4a26469706673582212203a29e5db79f922ad7cb42509ff53f1621040fa7b8d57c0939243f3853724bb7a64736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "219:1024:6:-:0;;;328:70;;;;;;;;;;354:35;11632:4:8;372:16:6;;354:17;;;:35;;:::i;:::-;219:1024;;38044:118:8;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;;;:25;;:::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;;;:35;;:::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;38124:8:::1;::::0;::::1;;;;;;;;:21;;;38146:7;38124:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;38044:118:::0;:::o;38312:151::-;38371:10;38439:5;38427:18;38418:27;;38403:53;;;:::o;12996:208::-;13061:16;13175:21;:19;;;:21;;:::i;:::-;13168:28;;12996:208;;;:::o;13488:2070::-;13537:16;13628:1;13570:55;13582:42;13570:11;;;:55;;:::i;:::-;:59;13566:250;;;13682:42;13656:3;;:69;;;;;;;;;;;;;;;;;;13740:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13800:4;13793:11;;;;13566:250;13888:1;13830:55;13842:42;13830:11;;;:55;;:::i;:::-;:59;13826:259;;;13950:42;13924:3;;:69;;;;;;;;;;;;;;;;;;14008:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;14069:4;14062:11;;;;13826:259;14157:1;14099:55;14111:42;14099:11;;;:55;;:::i;:::-;:59;14095:254;;;14217:42;14191:3;;:69;;;;;;;;;;;;;;;;;;14275:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;14333:4;14326:11;;;;14095:254;14421:1;14363:55;14375:42;14363:11;;;:55;;:::i;:::-;:59;14359:258;;;14483:42;14457:3;;:69;;;;;;;;;;;;;;;;;;14541:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14601:4;14594:11;;;;14359:258;14689:1;14631:55;14643:42;14631:11;;;:55;;:::i;:::-;:59;14627:256;;;14750:42;14724:3;;:69;;;;;;;;;;;;;;;;;;14808:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14867:4;14860:11;;;;14627:256;14955:1;14897:55;14909:42;14897:11;;;:55;;:::i;:::-;:59;14893:205;;;15017:42;14991:3;;:69;;;;;;;;;;;;;;;;;;15082:4;15075:11;;;;14893:205;15170:1;15112:55;15124:42;15112:11;;;:55;;:::i;:::-;:59;15108:204;;;15231:42;15205:3;;:69;;;;;;;;;;;;;;;;;;15296:4;15289:11;;;;15108:204;15384:1;15326:55;15338:42;15326:11;;;:55;;:::i;:::-;:59;15322:206;;;15447:42;15421:3;;:69;;;;;;;;;;;;;;;;;;15512:4;15505:11;;;;15322:206;15545:5;15538:12;;13488:2070;;:::o;13212:127::-;13318:13;13294:21;:37;;;;;;;;;;;;:::i;:::-;;13212:127;:::o;219:1024:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "219:1024:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15802:132:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;410:340:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;289:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;762:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;263:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:87;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15802:132:8;15886:40;15897:5;15904:7;15923:1;15913:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15886:10;:40::i;:::-;15802:132;;:::o;410:340:6:-;541:20;:18;:20::i;:::-;527:34;;:10;:34;;;519:43;;;;;;646:1;577:66;619:8;628:7;636:6;577:41;:66::i;:::-;:70;;;573:169;;;679:7;664:6;:23;;;;;;;;;;;;:::i;:::-;;573:169;;;728:14;;;;;;;;;;;;;;;;;:6;:14;;;;;;;;;;;;:::i;:::-;;573:169;410:340;;;:::o;289:22::-;;;;:::o;762:289::-;856:187;896:1;946:7;856:187;;1001:6;856:25;:187::i;:::-;848:7;:195;;;;762:289;:::o;263:19::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1147:87::-;1189:12;1220:6;1213:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1147:87;:::o;38172:132:8:-;38232:24;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;38276:8:::1;::::0;::::1;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;38269:27;;38172:132:::0;:::o;51767:589::-;51898:17;52027:16;:6;52034:1;52027:9;;;;;;;;;;;;;;;;:16;;;;;52026:40;;;;52049:16;:6;52056:1;52049:9;;;;;;;;;;;;;;;;:16;;;;;52026:40;:74;;;;52097:1;52071:28;;52077:6;52084:1;52077:9;;;;;;;;;;;;;;;;52071:16;;:28;;;;52026:74;52022:115;;;52124:1;52117:8;;;;52022:115;52147:18;52168:96;52204:6;52212:8;52228:7;52238:25;:23;:25::i;:::-;52168:35;:96::i;:::-;52147:117;;52280:13;52275:55;;52317:1;52310:8;;;;;52275:55;52347:1;52340:8;;;51767:589;;;;;;:::o;46245:2689::-;46347:16;46395:1;46385:7;:11;46384:32;;;;;46413:2;46402:7;:13;;46384:32;46376:41;;;;;;46438:2;46428:12;;;;46497:19;46529:1;46519:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46497:34;;46565:7;46554:20;;46542:6;46549:1;46542:9;;;;;;;;;;;:32;;;;;;;;;;;46585:19;46617:2;46607:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46585:35;;46631:27;46671:2;46661:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46631:43;;46685:30;46718:40;:38;:40::i;:::-;46685:73;;46808:4;46800:6;46793:20;47165:11;47153:10;47149:28;47144:1;47134:8;47130:16;47120:27;47116:62;47109:4;47101:6;47097:17;47090:89;47216:4;47200:14;47193:28;47269:22;47262:4;47246:14;47242:25;47235:57;47313:18;47344:2;47334:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47313:34;;47407:6;47400:4;47393:5;47389:16;47382:32;47435:25;47473:1;47463:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47435:40;;47486;47496:5;47503:2;47507:1;47510:12;47524:1;47486:9;:40::i;:::-;;47537:20;;:::i;:::-;:62;;;;;;;;47561:6;47537:62;;;;47569:6;47537:62;;;;47577:14;47537:62;;;;47593:5;47537:62;;;;;47610:15;47628:47;;;;;;;;;;;;;;;;;;47653:4;47659:15;47628:14;:47::i;:::-;47610:65;;47686:30;47729:1;47719:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;47686:45;;47799:4;47785:12;47781:23;47775:30;47864:65;47861:1;47857:73;47850:4;47831:17;47827:28;47819:112;47990:63;47987:1;47983:71;47976:4;47957:17;47953:28;47945:110;48114:61;48111:1;48107:69;48100:4;48081:17;48077:28;48069:108;48236:59;48233:1;48229:67;48222:4;48203:17;48199:28;48191:106;48356:57;48353:1;48349:65;48342:4;48323:17;48319:28;48311:104;48474:55;48471:1;48467:63;48460:4;48441:17;48437:28;48429:102;48590:53;48587:1;48583:61;48576:4;48557:17;48553:28;48545:100;48704:51;48701:1;48697:59;48690:4;48671:17;48667:28;48659:98;47751:1017;48778:123;48810:7;48846:17;48865:4;48870:1;48865:7;;;;;;;;;;;48874:15;48881:4;48886:1;48881:7;;;;;;;;;;;48874:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48891:4;48896:1;48891:7;;;;;;;;;;;48829:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48819:81;;;;;;48778:31;:123::i;:::-;48919:7;48912:14;;;;;;;;;;;46245:2689;;;;;:::o;38312:151::-;38371:10;38439:5;38427:18;38418:27;;38403:53;;;:::o;12996:208::-;13061:16;13175:21;:19;:21::i;:::-;13168:28;;12996:208;;;:::o;13347:133::-;13405:26;13451:21;13444:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13347:133;:::o;52775:2791::-;52927:19;53072:22;53146:2;53141:1;53118:6;53125:10;53118:18;;;;;;;;;;;;;;;;53112:25;;53107:31;;:35;53097:6;:46;:51;53072:76;;53159:20;53192:2;53182:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53159:36;;53206:52;53216:6;53224:17;53243:2;53247:7;53256:1;53206:9;:52::i;:::-;;53324:48;53348:12;53362:8;53331:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53324:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53307:66;;;;;;;;;;;;;;;;;;;;;;;;;53297:77;;;;;;53285:7;53275:18;;;;;;:99;53269:147;;53399:5;53392:12;;;;;;53269:147;53426:17;53521:1;53467:6;53514:1;53495:15;53474:17;:37;:41;53467:49;;;;;;;;;;;;;;;;53461:56;;53456:62;;:66;53446:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53426:97;;53534:78;53544:6;53573:15;53552:17;:37;53591:4;:11;53604:4;53610:1;53534:9;:78::i;:::-;;53782:90;53801:12;53808:4;53801:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53815:7;53835:6;53867:1;53862:2;53842:17;:22;:26;53835:34;;;;;;;;;;;;;;;;53829:41;;53824:47;;53782:18;:90::i;:::-;53777:136;;53896:5;53889:12;;;;;;;53777:136;54162:29;54204:10;54194:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54162:53;;54226:74;54236:6;54264:2;54244:17;:22;54268:10;54280:16;54298:1;54226:9;:74::i;:::-;;54311:26;54350:2;54340:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54311:42;;54364:15;54436:2;54422:4;:11;54408:10;54402:2;54382:17;:22;:37;:51;:56;54364:74;;54449:56;54459:6;54480:2;54467:10;:15;54484:2;54488:13;54503:1;54449:9;:56::i;:::-;;54516:25;54544:21;54551:13;54544:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54516:49;;54643:16;54661:17;54626:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54616:64;;;;;;54580:22;:32;54603:8;54580:32;;;;;;;;;;;;:100;54576:232;;;54746:22;:32;54769:8;54746:32;;;;;;;;;;;54739:39;;;54576:232;;;54803:5;54796:12;;;;;;;;;;;54576:232;54932:20;54965:15;54955:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;54932:49;;54992:65;55002:6;55010:17;55029:15;55046:7;55055:1;54992:9;:65::i;:::-;;55073:47;55083:15;55090:7;55083:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55100:4;55106:13;55073:9;:47::i;:::-;55068:93;;55144:5;55137:12;;;;;;;;;;;;55068:93;55260:41;:60;55302:17;55260:60;;;;;;;;;;;;;;;;;;;;;55255:226;;55400:69;55450:6;55458:10;55400:49;:69::i;:::-;55337:41;:60;55379:17;55337:60;;;;;;;;;;;;:132;;;;;;;;;;;;;;;;;;55255:226;55498:41;:60;55540:17;55498:60;;;;;;;;;;;;;;;;;;;;;55491:67;;;;;;;;;;52775:2791;;;;;;;:::o;38615:171::-;38695:23;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;38738:8:::1;::::0;::::1;;;;;;;;:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;38731:47;;38615:171:::0;:::o;55705:707::-;55833:25;55871:14;55898:9;55888:7;:19;55871:36;;55940:9;55926:3;:10;:23;;55918:32;;;;;;56006:6;56020:11;56015:2;:16;56006:25;;56123:6;56137:9;56132:2;:14;56123:23;;56157:227;56188:7;56174:11;56169:2;:16;:26;56164:1;:32;56157:227;;;56269:1;56262:5;56258:13;56252:20;56310:3;56306:1;56301:3;56297:11;56290:24;56222:107;56348:2;56343:7;;;;56370:2;56365:7;;;;56157:227;;;56401:3;56394:10;;;;;55705:707;;;;;;;:::o;35952:384::-;36072:11;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;36096:22:::1;36133:1;36121:14;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36096:39;;36159:5;36165:1;36159:8;;;;;;;;;;;36146:7;36154:1;36146:10;;;;;;;;;;;;;:21;;;;36191:5;36197:1;36191:8;;;;;;;;;;;36178:7;36186:1;36178:10;;;;;;;;;;;;;:21;;;;36223:5;36229:1;36223:8;;;;;;;;;;;36210:7;36218:1;36210:10;;;;;;;;;;;;;:21;;;;36255:5;36261:1;36255:8;;;;;;;;;;;36242:7;36250:1;36242:10;;;;;;;;;;;;;:21;;;;36281:47;36296:11;36309:7;36318:9;36281:14;:47::i;:::-;36274:54;;;35952:384:::0;;;;;:::o;48942:154::-;49077:11;49042:22;:32;49065:8;49042:32;;;;;;;;;;;:46;;;;48942:154;;:::o;13488:2070::-;13537:16;13628:1;13570:55;13582:42;13570:11;:55::i;:::-;:59;13566:250;;;13682:42;13656:3;;:69;;;;;;;;;;;;;;;;;;13740:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13800:4;13793:11;;;;13566:250;13888:1;13830:55;13842:42;13830:11;:55::i;:::-;:59;13826:259;;;13950:42;13924:3;;:69;;;;;;;;;;;;;;;;;;14008:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14069:4;14062:11;;;;13826:259;14157:1;14099:55;14111:42;14099:11;:55::i;:::-;:59;14095:254;;;14217:42;14191:3;;:69;;;;;;;;;;;;;;;;;;14275:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14333:4;14326:11;;;;14095:254;14421:1;14363:55;14375:42;14363:11;:55::i;:::-;:59;14359:258;;;14483:42;14457:3;;:69;;;;;;;;;;;;;;;;;;14541:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14601:4;14594:11;;;;14359:258;14689:1;14631:55;14643:42;14631:11;:55::i;:::-;:59;14627:256;;;14750:42;14724:3;;:69;;;;;;;;;;;;;;;;;;14808:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14867:4;14860:11;;;;14627:256;14955:1;14897:55;14909:42;14897:11;:55::i;:::-;:59;14893:205;;;15017:42;14991:3;;:69;;;;;;;;;;;;;;;;;;15082:4;15075:11;;;;14893:205;15170:1;15112:55;15124:42;15112:11;:55::i;:::-;:59;15108:204;;;15231:42;15205:3;;:69;;;;;;;;;;;;;;;;;;15296:4;15289:11;;;;15108:204;15384:1;15326:55;15338:42;15326:11;:55::i;:::-;:59;15322:206;;;15447:42;15421:3;;:69;;;;;;;;;;;;;;;;;;15512:4;15505:11;;;;15322:206;15545:5;15538:12;;13488:2070;;:::o;52364:403::-;52475:19;52507:11;52521:4;52507:18;;52562:13;52544:7;:14;:31;52536:40;;;;;;52592:9;52587:149;52610:13;52607:1;:16;52587:149;;;52664:7;52672:1;52664:10;;;;;;;;;;;;;;;;52649:25;;;:8;52658:1;52649:11;;;;;;;;;;:25;;;;52645:80;;52704:5;52695:14;;52645:80;52625:3;;;;;;;52587:149;;;;52753:6;52746:13;;;52364:403;;;;;:::o;49104:1025::-;49203:17;49233:10;49254:14;49279:12;49302;49325:18;49356:2;49346:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49325:34;;49370:11;49415:4;49400:7;49408:1;49400:10;;;;;;;;;;;;;;;;49394:17;;49389:23;;:30;49384:1;:36;49370:50;;49439:40;49449:7;49458:6;49466:2;49470:5;49477:1;49439:9;:40::i;:::-;49431:48;;49490:18;49521:2;49511:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49490:34;;49545:6;49535:16;;;;49570:84;49580:7;49634:4;49610:7;49627:1;49618:6;:10;49610:19;;;;;;;;;;;;;;;;49604:26;;49599:32;;:39;49589:6;:50;49641:2;49645:5;49652:1;49570:9;:84::i;:::-;49562:92;;49714:2;49707:5;49703:14;49697:21;49689:29;;49757:2;49750:5;49746:14;49740:21;49732:29;;49800:41;49816:8;49826:2;49830:4;49836;49800:15;:41::i;:::-;49782:59;;;;;;;;49905:6;49856:55;;49890:7;49880:18;;;;;;49872:27;;49856:55;;;49852:270;;;49935:4;49928:11;;;;;;;;;;;49852:270;49990:41;50006:8;50016:2;50020:4;50026;49990:15;:41::i;:::-;49972:59;;;;;;;;50103:6;50054:55;;50088:7;50078:18;;;;;;50070:27;;50054:55;;;50046:64;;;;;;;;;49104:1025;;;;;;:::o;50137:1622::-;50253:19;50285:10;50448:17;50517:1;50489:6;50510:1;50496:11;:15;50489:23;;;;;;;;;;;;;;;;50483:30;;50478:36;;:40;50468:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50448:71;;50530:52;50540:6;50548:11;50561:4;:11;50574:4;50580:1;50530:9;:52::i;:::-;;50593:27;50633:2;50623:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50593:43;;50647:47;50657:6;50665:5;50672:2;50676:14;50692:1;50647:9;:47::i;:::-;;50705:20;50738:11;50728:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50705:45;;50785:1;50774:14;;50761:7;50769:1;50761:10;;;;;;;;;;;:27;;;;;;;;;;;50806:51;50816:6;50838:2;50824:11;:16;50842:2;50846:7;50855:1;50806:9;:51::i;:::-;;50868:21;:93;;;;;;;;;;;;;;;;;;;50972:43;50982:8;50992:1;50995:2;50999:7;51008:6;50972:9;:43::i;:::-;;51034:48;51044:15;51051:7;51044:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51061:4;51067:14;51034:9;:48::i;:::-;51026:56;;51098:5;51093:51;;51127:5;51120:12;;;;;;;;;51093:51;51247:22;:158;;;;;;;;;;;;;;;;;;;51416:20;51449:6;51439:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51416:40;;51480:4;51467:17;;:7;51475:1;51467:10;;;;;;;;;;;:17;;;;;;;;;;;51495:36;51505:6;51513:1;51516:2;51520:7;51529:1;51495:9;:36::i;:::-;;51542:17;51606:1;51583:6;51590:10;51583:18;;;;;;;;;;;;;;;;51577:25;;51572:31;;:35;51562:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51542:66;;51619:47;51629:6;51637;51645:4;:11;51658:4;51664:1;51619:9;:47::i;:::-;;51685:43;51695:15;51702:7;51695:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51712:4;51718:9;51685;:43::i;:::-;51677:51;;51746:5;51739:12;;;;;;;;;;50137:1622;;;;;:::o;30354:462::-;30473:11;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;30497:10:::1;30510:8:::0;::::1;;;;;;;;;;:17;;;30528:11;30541:9;30510:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;30497:54;;30598:9;30584:11;:23;30574:7;:33;30566:5;:41;30562:109;;;30631:1;30624:8:::0;::::1;;;;;;30562:109;30681:17;30701:14;30709:5;30701:7;:14::i;:::-;30681:34;;30733:8;::::0;::::1;;;;;;;;:28;;;30769:5;30776:1;30779:11;30792:4;30798:9;30733:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;30726:82;;;;12502:1;30354:462:::0;;;;;:::o;13212:127::-;13318:13;13294:21;:37;;;;;;;;;;;;:::i;:::-;;13212:127;:::o;56624:1003::-;56716:13;56731:25;57171:8;57190:12;57255:4;57249:11;57287:5;57281:4;57274:19;57329:2;57324;57318:4;57314:13;57307:25;57368:2;57363;57357:4;57353:13;57346:25;57407:2;57402;57396:4;57392:13;57385:25;57465:2;57459:4;57454:3;57448:4;57445:1;57442;57436:4;57431:37;57424:44;;57575:4;57569:11;57561:19;;57222:369;57609:3;57614:4;57601:18;;;;;;56624:1003;;;;;;;:::o;45862:375::-;45923:26;45962:19;:17;:19::i;:::-;45992:24;;:::i;:::-;46027:22;46039:3;46044:4;46027:11;:22::i;:::-;46060:16;:3;:14;:16::i;:::-;46092:6;46087:90;46108:4;:11;46104:1;:15;46087:90;;;46141:24;46157:4;46162:1;46157:7;;;;;;;;;;;;;;46141:3;:15;;:24;;;;:::i;:::-;46121:3;;;;;;;46087:90;;;;46187:17;:3;:15;:17::i;:::-;46222:3;:7;;;46215:14;;;45862:375;;;:::o;59359:179::-;59455:4;59449:11;59514:4;59505:7;59501:18;59489:10;59483:4;59474:46;59422:109;:::o;4477:446::-;4552:13;4568:9;4552:25;;4609:1;4603:2;4592:8;:13;;;;;;:18;4588:83;;4656:2;4645:8;:13;;;;;;4639:2;:20;4627:32;;;;4588:83;4697:8;4681:4;:13;;:24;;;;;4795:4;4789:11;4827:3;4821:4;4814:17;4857:1;4852:3;4845:14;4895:8;4890:3;4886:18;4880:4;4873:32;4763:153;;;;:::o;10853:130::-;10925:50;10952:4;8960:1;10925:26;:50::i;:::-;10853:130;:::o;10458:181::-;10552:49;10563:4;8910:1;10587:6;:13;10552:10;:49::i;:::-;10612:19;10624:6;10612:4;:11;;:19;;;;:::i;:::-;;10458:181;;:::o;11125:138::-;11198:57;11225:4;9125:1;11198:26;:57::i;:::-;11125:138;:::o;9881:147::-;9982:38;10016:2;10011:1;10001:6;:11;;;;10000:18;9982:4;:11;;:38;;;;:::i;:::-;9881:147;;:::o;9135:738::-;9247:2;9237:6;:12;9233:633;;9266:42;9300:6;9295:1;9285:6;:11;;;;9284:22;;;9266:4;:11;;:42;;;;:::i;:::-;9233:633;;;9340:4;9330:6;:14;9326:540;;9361:38;9395:2;9390:1;9380:6;:11;;;;9379:18;9361:4;:11;;:38;;;;:::i;:::-;9414:25;9429:6;9437:1;9414:4;:14;;:25;;;;;:::i;:::-;;9326:540;;;9471:6;9461;:16;9457:409;;9494:38;9528:2;9523:1;9513:6;:11;;;;9512:18;9494:4;:11;;:38;;;;:::i;:::-;9547:25;9562:6;9570:1;9547:4;:14;;:25;;;;;:::i;:::-;;9457:409;;;9604:10;9594:6;:20;9590:276;;9631:38;9665:2;9660:1;9650:6;:11;;;;9649:18;9631:4;:11;;:38;;;;:::i;:::-;9684:25;9699:6;9707:1;9684:4;:14;;:25;;;;;:::i;:::-;;9590:276;;;9741:18;9731:6;:28;9727:139;;9776:38;9810:2;9805:1;9795:6;:11;;;;9794:18;9776:4;:11;;:38;;;;:::i;:::-;9829:25;9844:6;9852:1;9829:4;:14;;:25;;;;;:::i;:::-;;9727:139;9590:276;9457:409;9326:540;9233:633;9135:738;;;:::o;5571:1241::-;5650:21;;:::i;:::-;5721:4;:13;;;5703:4;:8;;;:15;5688:5;:12;:30;:46;5684:129;;;5751:50;5758:4;5799:1;5764:32;5768:4;:13;;;5783:5;:12;5764:3;:32::i;:::-;:36;5751:6;:50::i;:::-;5684:129;5823:9;5843:8;5862;5873:5;:12;5862:23;;5940:4;5934:11;6016:6;6010:13;6104:2;6095:6;6087;6083:19;6079:28;6071:36;;6228:5;6222:12;6214:6;6210:25;6202:6;6195:41;6292:2;6285:5;6281:14;6274:21;;5905:401;;6316:212;6329:2;6322:3;:9;6316:212;;6448:3;6442:10;6436:4;6429:24;6490:2;6482:10;;;;6514:2;6507:9;;;;6340:2;6333:9;;;;6316:212;;;6538:9;6570:1;6563:3;6558:2;:8;6550:3;:17;:21;6538:33;;6665:4;6661:9;6655:3;6649:10;6645:26;6718:4;6711;6705:11;6701:22;6763:7;6753:8;6750:21;6744:4;6737:35;6615:168;;6800:4;6793:11;;;;;;5571:1241;;;;:::o;7068:586::-;7168:4;:13;;;7164:1;7146:4;:8;;;:15;:19;:35;7142:99;;;7198:31;7205:4;7227:1;7211:4;:13;;;:17;7198:6;:31::i;:::-;7142:99;7295:4;7289:11;7371:6;7365:13;7463:2;7454:6;7446;7442:19;7438:28;7562:5;7556:4;7548:20;7609:1;7601:6;7597:14;7589:6;7582:30;7260:387;;;;;:::o;7956:748::-;8041:21;;:::i;:::-;8104:4;:13;;;8086:4;:8;;;:15;8079:4;:22;:38;8075:113;;;8134:42;8141:4;8174:1;8147:24;8151:4;:13;;;8166:4;8147:3;:24::i;:::-;:28;8134:6;:42::i;:::-;8075:113;8198:9;8224:1;8217:4;8210:3;:11;:15;8198:27;;8280:4;8274:11;8356:6;8350:13;8448:4;8439:6;8431;8427:19;8423:30;8586:5;8578:4;8574:9;8567:4;8561:11;8557:27;8554:38;8548:4;8541:52;8634:4;8626:6;8622:17;8614:6;8607:33;8245:430;;;8692:4;8685:11;;;7956:748;;;;;:::o;5116:151::-;5169:9;5200:2;5195;:7;5191:49;;;5226:2;5219:9;;;;5191:49;5257:2;5250:9;;5116:151;;;;;:::o;4931:177::-;5007:19;5029:4;:8;;;5007:30;;5048:21;5053:4;5059:9;5048:4;:21::i;:::-;5080:20;5087:4;5093:6;5080;:20::i;:::-;;4931:177;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\nimport './provableAPI.sol';\r\n\r\n// Template from web3examples github: https://github.com/web3examples/ethereum/blob/master/oracle_examples/provable_random.sol\r\ncontract OrmrOracle is usingProvable {\r\n    bytes public result;\r\n    bytes32 public queryId;\r\n        \r\n    constructor() { \r\n        provable_setProof(proofType_Ledger); \r\n    }\r\n    \r\n    function __callback(bytes32  _queryId,string memory _result,bytes memory _proof ) override public {\r\n        require(msg.sender == provable_cbAddress());\r\n        if (provable_randomDS_proofVerify__returnCode(_queryId,_result,_proof)== 0) {\r\n            result = bytes(_result); \r\n        }\r\n        else\r\n            result=\"Error\";\r\n    }\r\n    \r\n    function GetRandom(uint8 nrbytes) public payable { // not supported in remix\r\n        queryId=provable_newRandomDSQuery(\r\n            0,          // QUERY_EXECUTION_DELAY\r\n            nrbytes,    // NUM_RANDOM_BYTES_REQUESTED\r\n            200000      // GAS_FOR_CALLBACK\r\n        );\r\n    }\r\n\r\n    // create a way to access the result of the oracle query from outside the contract\r\n    function GetResult() public view returns (bytes memory){\r\n        return result;\r\n    }\r\n    \r\n}\r\n\r\n// More examples (with truffle as well!): https://github.com/provable-things/ethereum-examples/tree/master/solidity\r\n// Docs: https://docs.provable.xyz/#ethereum\r\n// Query Tester: https://app.provable.xyz/home/ ",
  "sourcePath": "D:\\HHS\\Jaar 4 Minor\\IT Deel Minor\\Assignments\\PD-8\\contracts\\OrmrOracle.sol",
  "ast": {
    "absolutePath": "/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/OrmrOracle.sol",
    "exportedSymbols": {
      "OrmrOracle": [
        793
      ]
    },
    "id": 794,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 716,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 717,
        "nodeType": "ImportDirective",
        "scope": 794,
        "sourceUnit": 7255,
        "src": "60:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 718,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7254,
              "src": "242:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7254",
                "typeString": "contract usingProvable"
              }
            },
            "id": 719,
            "nodeType": "InheritanceSpecifier",
            "src": "242:13:6"
          }
        ],
        "contractDependencies": [
          7254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 793,
        "linearizedBaseContracts": [
          793,
          7254
        ],
        "name": "OrmrOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 721,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 793,
            "src": "263:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 720,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "263:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 723,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 793,
            "src": "289:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 722,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "342:56:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 727,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "372:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 726,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "354:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "354:35:6"
                }
              ]
            },
            "documentation": null,
            "id": 731,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:6"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:6"
            },
            "scope": 793,
            "src": "328:70:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1914
            ],
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "508:242:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "527:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "527:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 744,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5008,
                            "src": "541:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "527:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "519:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "519:43:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 750,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "619:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 751,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "628:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "636:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 749,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6752,
                        "src": "577:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "577:66:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "646:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "577:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "728:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:7:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      },
                      "src": "728:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 767,
                    "nodeType": "ExpressionStatement",
                    "src": "728:14:6"
                  },
                  "id": 768,
                  "nodeType": "IfStatement",
                  "src": "573:169:6",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "649:51:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 756,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "664:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 759,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 735,
                                "src": "679:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 757,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "664:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "664:23:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 739,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "492:8:6"
            },
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "430:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "448:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "470:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:62:6"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:6"
            },
            "scope": 793,
            "src": "410:340:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "811:240:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 775,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "848:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "896:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 778,
                          "name": "nrbytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "946:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "323030303030",
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1001:6:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          },
                          "value": "200000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          }
                        ],
                        "id": 776,
                        "name": "provable_newRandomDSQuery",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "856:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "856:187:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "848:195:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "848:195:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "446dd971",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "nrbytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "781:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "780:15:6"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:6"
            },
            "scope": 793,
            "src": "762:289:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 791,
              "nodeType": "Block",
              "src": "1202:32:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 789,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 721,
                    "src": "1220:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 790,
                  "nodeType": "Return",
                  "src": "1213:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a7d9af1",
            "id": 792,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetResult",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:6"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 792,
                  "src": "1189:12:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:14:6"
            },
            "scope": 793,
            "src": "1147:87:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 794,
        "src": "219:1024:6"
      }
    ],
    "src": "33:1425:6"
  },
  "legacyAST": {
    "absolutePath": "/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/OrmrOracle.sol",
    "exportedSymbols": {
      "OrmrOracle": [
        793
      ]
    },
    "id": 794,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 716,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/D/HHS/Jaar 4 Minor/IT Deel Minor/Assignments/PD-8/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 717,
        "nodeType": "ImportDirective",
        "scope": 794,
        "sourceUnit": 7255,
        "src": "60:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 718,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7254,
              "src": "242:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7254",
                "typeString": "contract usingProvable"
              }
            },
            "id": 719,
            "nodeType": "InheritanceSpecifier",
            "src": "242:13:6"
          }
        ],
        "contractDependencies": [
          7254
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 793,
        "linearizedBaseContracts": [
          793,
          7254
        ],
        "name": "OrmrOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 721,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 793,
            "src": "263:19:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 720,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "263:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3f1be4d4",
            "id": 723,
            "mutability": "mutable",
            "name": "queryId",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 793,
            "src": "289:22:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 722,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 730,
              "nodeType": "Block",
              "src": "342:56:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 727,
                        "name": "proofType_Ledger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1548,
                        "src": "372:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 726,
                      "name": "provable_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4996,
                      "src": "354:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "354:35:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 729,
                  "nodeType": "ExpressionStatement",
                  "src": "354:35:6"
                }
              ]
            },
            "documentation": null,
            "id": 731,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "339:2:6"
            },
            "returnParameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:6"
            },
            "scope": 793,
            "src": "328:70:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1914
            ],
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "508:242:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "527:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "527:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 744,
                            "name": "provable_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5008,
                            "src": "541:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:20:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "527:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "519:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:43:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "519:43:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 750,
                          "name": "_queryId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 733,
                          "src": "619:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 751,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 735,
                          "src": "628:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 737,
                          "src": "636:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 749,
                        "name": "provable_randomDS_proofVerify__returnCode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6752,
                        "src": "577:41:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_uint8_$",
                          "typeString": "function (bytes32,string memory,bytes memory) returns (uint8)"
                        }
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "577:66:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "646:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "577:70:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 764,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 721,
                        "src": "728:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "4572726f72",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "735:7:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e342daa49723ff3485f4ff5f755a17b8bc9c3c33bbd312ceee37c94eebfe45c1",
                          "typeString": "literal_string \"Error\""
                        },
                        "value": "Error"
                      },
                      "src": "728:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "id": 767,
                    "nodeType": "ExpressionStatement",
                    "src": "728:14:6"
                  },
                  "id": 768,
                  "nodeType": "IfStatement",
                  "src": "573:169:6",
                  "trueBody": {
                    "id": 763,
                    "nodeType": "Block",
                    "src": "649:51:6",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 756,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "664:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 759,
                                "name": "_result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 735,
                                "src": "679:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "673:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 757,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "673:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "673:14:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "664:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 762,
                        "nodeType": "ExpressionStatement",
                        "src": "664:23:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "38bbfa50",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 739,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "492:8:6"
            },
            "parameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "_queryId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "430:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "430:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "448:21:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 770,
                  "src": "470:19:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "429:62:6"
            },
            "returnParameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:6"
            },
            "scope": 793,
            "src": "410:340:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "811:240:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 775,
                      "name": "queryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 723,
                      "src": "848:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "896:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "id": 778,
                          "name": "nrbytes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 772,
                          "src": "946:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "323030303030",
                          "id": 779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1001:6:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          },
                          "value": "200000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_200000_by_1",
                            "typeString": "int_const 200000"
                          }
                        ],
                        "id": 776,
                        "name": "provable_newRandomDSQuery",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "856:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,uint256,uint256) returns (bytes32)"
                        }
                      },
                      "id": 780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "856:187:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "848:195:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "848:195:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "446dd971",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetRandom",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "nrbytes",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 784,
                  "src": "781:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "781:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "780:15:6"
            },
            "returnParameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "811:0:6"
            },
            "scope": 793,
            "src": "762:289:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 791,
              "nodeType": "Block",
              "src": "1202:32:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 789,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 721,
                    "src": "1220:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 788,
                  "id": 790,
                  "nodeType": "Return",
                  "src": "1213:13:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9a7d9af1",
            "id": 792,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetResult",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:6"
            },
            "returnParameters": {
              "id": 788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 792,
                  "src": "1189:12:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1189:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:14:6"
            },
            "scope": 793,
            "src": "1147:87:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 794,
        "src": "219:1024:6"
      }
    ],
    "src": "33:1425:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0xb21240a62594fa55c836ebeaa9428ef77f3bb912311125f650a0bf53c617fb0b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ],
          "name": "LogResult",
          "type": "event"
        },
        "0x958c0193cea72acb1ba51b31092fb4edff6e5bf84a2289db7e76bea413645df3": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bytes",
              "name": "result",
              "type": "bytes"
            }
          ],
          "name": "LogResult",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xeEf6C53642DC0dCe833941D7D143e2799FeB3371",
      "transactionHash": "0x9ea26a2d2c717370f3cd4e4aec9c3fa1d9b16923b76b2fbf77fdb30d99fd5c82"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-14T23:02:33.563Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally      meant to be defined in child contract when proofs are used.      The function bodies simply silence compiler warnings."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}