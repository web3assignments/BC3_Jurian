{
  "contractName": "OrmrOracle",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "priceOfUrl",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "temp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestTemp",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTemp",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTemp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOfUrl\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTemp\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"temp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/OrmrOracle.sol\":\"OrmrOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/OrmrOracle.sol\":{\"keccak256\":\"0x408cb16ee2a95025c90db4967393c4da940edcbcf4ad8b8db19e8425bf2803e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f3c2e37597fe655d50c875d5e6c73967005484ab8c0683a68e3a6712d580fab\",\"dweb:/ipfs/QmYvZkjZC4Coqsu861mX8oUeZUsmPK9pU2PkTGRLGiDgNu\"]},\"/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/provableAPI.sol\":{\"keccak256\":\"0xd4402a074d4da697791ed2e70fb254754d9c8a1182e118ad4bf7e4d1b9605234\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a3a61e21e7bfdacb74dae89424780229f2404387cc37c46a5656d6ebd4cb4a2\",\"dweb:/ipfs/QmTTsNTULLLWzFrtgKX8o6P3qDK8Mkjn9N2gQ8JjG29LTs\"]}},\"version\":1}",
  "bytecode": "0x6080604052611a0b806100136000396000f3fe6080604052600436106100555760003560e01c806313fdba3c1461005a57806327dc297e1461006457806338bbfa501461013657806343d3b1be1461029f578063673402e5146102ca578063952525601461035a575b600080fd5b6100626103ea565b005b34801561007057600080fd5b506101346004803603604081101561008757600080fd5b8101908080359060200190929190803590602001906401000000008111156100ae57600080fd5b8201836020820111156100c057600080fd5b803590602001918460018302840111640100000000831117156100e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104e3565b005b34801561014257600080fd5b5061029d6004803603606081101561015957600080fd5b81019080803590602001909291908035906020019064010000000081111561018057600080fd5b82018360208201111561019257600080fd5b803590602001918460018302840111640100000000831117156101b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021757600080fd5b82018360208201111561022957600080fd5b8035906020019184600183028401116401000000008311171561024b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061053d565b005b3480156102ab57600080fd5b506102b4610560565b6040518082815260200191505060405180910390f35b3480156102d657600080fd5b506102df610566565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561031f578082015181840152602081019050610304565b50505050905090810190601f16801561034c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036657600080fd5b5061036f610604565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103af578082015181840152602081019050610394565b50505050905090810190601f1680156103dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104286040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506106a6565b600681905550600654471015610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611941602e913960400191505060405180910390fd5b6104e06040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060a001604052806067815260200161196f60679139610a35565b50565b6104eb610f79565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052257600080fd5b8060059080519060200190610538929190611823565b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b60065481565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b505050505081565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069c5780601f106106715761010080835404028352916020019161069c565b820191906000526020600020905b81548152906001019060200180831161067f57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061072e5750600061072c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b1561073f5761073d60006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461091b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b505050506040513d60208110156108ca57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757808201518184015260208101905061098c565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b505050506040513d6020811015610a1d57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610abd57506000610abb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b15610ace57610acc60006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050506040513d6020811015610b6257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610caa57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c2f57600080fd5b505af1158015610c43573d6000803e3d6000fd5b505050506040513d6020811015610c5957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d39578082015181840152602081019050610d1e565b50505050905090810190601f168015610d665780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610de5576000801b915050610f73565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610e7f578082015181840152602081019050610e64565b50505050905090810190601f168015610eac5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b50505050506040513d6020811015610f5e57600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061100157506000610fff600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b156110125761101060006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561107c57600080fd5b505af1158015611090573d6000803e3d6000fd5b505050506040513d60208110156110a657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111ee57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050506040513d602081101561119d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561125657600080fd5b505af115801561126a573d6000803e3d6000fd5b505050506040513d602081101561128057600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006112ab6112b2565b9050919050565b6000806112d2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611296565b111561137457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061136b6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611809565b60019050611806565b600061139373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611296565b11156114355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142c6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611809565b60019050611806565b600061145473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611296565b11156114f65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114ed6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611809565b60019050611806565b600061151573146500cfd35b22e4a392fe0adc06de1a1368ed48611296565b11156115b75773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115ae6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611809565b60019050611806565b60006115d673a2998efd205fb9d4b4963afb70778d6354ad3a41611296565b11156116785773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061166f6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611809565b60019050611806565b6000611697736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611296565b11156116fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600061171a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611296565b111561177e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600061179d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611296565b1115611801577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600090505b90565b806002908051906020019061181f9291906118a3565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061186457805160ff1916838001178555611892565b82800160010185558215611892579182015b82811115611891578251825591602001919060010190611876565b5b50905061189f9190611923565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118e457805160ff1916838001178555611912565b82800160010185558215611912579182015b828111156119115782518255916020019190600101906118f6565b5b50905061191f9190611923565b5090565b5b8082111561193c576000816000905550600101611924565b509056fe706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665656a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d30313436346364363235266c6f63617469653d48656c6c65766f6574736c756973292e6c697665776565725b305d2e74656d70a26469706673582212207f2651dd366774a60be26ea5ac42bae3196967c2424d965e6f98b07c4ccbe68d64736f6c63430007000033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c806313fdba3c1461005a57806327dc297e1461006457806338bbfa501461013657806343d3b1be1461029f578063673402e5146102ca578063952525601461035a575b600080fd5b6100626103ea565b005b34801561007057600080fd5b506101346004803603604081101561008757600080fd5b8101908080359060200190929190803590602001906401000000008111156100ae57600080fd5b8201836020820111156100c057600080fd5b803590602001918460018302840111640100000000831117156100e257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506104e3565b005b34801561014257600080fd5b5061029d6004803603606081101561015957600080fd5b81019080803590602001909291908035906020019064010000000081111561018057600080fd5b82018360208201111561019257600080fd5b803590602001918460018302840111640100000000831117156101b457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021757600080fd5b82018360208201111561022957600080fd5b8035906020019184600183028401116401000000008311171561024b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061053d565b005b3480156102ab57600080fd5b506102b4610560565b6040518082815260200191505060405180910390f35b3480156102d657600080fd5b506102df610566565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561031f578082015181840152602081019050610304565b50505050905090810190601f16801561034c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561036657600080fd5b5061036f610604565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103af578082015181840152602081019050610394565b50505050905090810190601f1680156103dc5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104286040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506106a6565b600681905550600654471015610489576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180611941602e913960400191505060405180910390fd5b6104e06040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060a001604052806067815260200161196f60679139610a35565b50565b6104eb610f79565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052257600080fd5b8060059080519060200190610538929190611823565b505050565b6000801b600360008060001b815260200190815260200160002081905550505050565b60065481565b60058054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105fc5780601f106105d1576101008083540402835291602001916105fc565b820191906000526020600020905b8154815290600101906020018083116105df57829003601f168201915b505050505081565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561069c5780601f106106715761010080835404028352916020019161069c565b820191906000526020600020905b81548152906001019060200180831161067f57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061072e5750600061072c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b1561073f5761073d60006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107a957600080fd5b505af11580156107bd573d6000803e3d6000fd5b505050506040513d60208110156107d357600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461091b57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b505050506040513d60208110156108ca57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109a757808201518184015260208101905061098c565b50505050905090810190601f1680156109d45780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156109f357600080fd5b505af1158015610a07573d6000803e3d6000fd5b505050506040513d6020811015610a1d57600080fd5b81019080805190602001909291905050509050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610abd57506000610abb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b15610ace57610acc60006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b505050506040513d6020811015610b6257600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610caa57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610c2f57600080fd5b505af1158015610c43573d6000803e3d6000fd5b505050506040513d6020811015610c5957600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610d39578082015181840152602081019050610d1e565b50505050905090810190601f168015610d665780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610d8557600080fd5b505af1158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610de5576000801b915050610f73565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610e7f578082015181840152602081019050610e64565b50505050905090810190601f168015610eac5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610ee5578082015181840152602081019050610eca565b50505050905090810190601f168015610f125780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610f3357600080fd5b505af1158015610f47573d6000803e3d6000fd5b50505050506040513d6020811015610f5e57600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061100157506000610fff600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611296565b145b156110125761101060006112a1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561107c57600080fd5b505af1158015611090573d6000803e3d6000fd5b505050506040513d60208110156110a657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146111ee57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561117357600080fd5b505af1158015611187573d6000803e3d6000fd5b505050506040513d602081101561119d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561125657600080fd5b505af115801561126a573d6000803e3d6000fd5b505050506040513d602081101561128057600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b60006112ab6112b2565b9050919050565b6000806112d2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed611296565b111561137457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061136b6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611809565b60019050611806565b600061139373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1611296565b11156114355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061142c6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611809565b60019050611806565b600061145473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e611296565b11156114f65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506114ed6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611809565b60019050611806565b600061151573146500cfd35b22e4a392fe0adc06de1a1368ed48611296565b11156115b75773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506115ae6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611809565b60019050611806565b60006115d673a2998efd205fb9d4b4963afb70778d6354ad3a41611296565b11156116785773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061166f6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611809565b60019050611806565b6000611697736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475611296565b11156116fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600061171a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf611296565b111561177e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600061179d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa611296565b1115611801577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611806565b600090505b90565b806002908051906020019061181f9291906118a3565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061186457805160ff1916838001178555611892565b82800160010185558215611892579182015b82811115611891578251825591602001919060010190611876565b5b50905061189f9190611923565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106118e457805160ff1916838001178555611912565b82800160010185558215611912579182015b828111156119115782518255916020019190600101906118f6565b5b50905061191f9190611923565b5090565b5b8082111561193c576000816000905550600101611924565b509056fe706c656173652061646420736f6d652045544820746f20636f76657220666f7220746865207175657279206665656a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d30313436346364363235266c6f63617469653d48656c6c65766f6574736c756973292e6c697665776565725b305d2e74656d70a26469706673582212207f2651dd366774a60be26ea5ac42bae3196967c2424d965e6f98b07c4ccbe68d64736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "224:789:6:-:0;;;;;;;;;",
  "deployedSourceMap": "224:789:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:362;;;:::i;:::-;;356:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15942:189:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;290:25:6;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;267:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:82;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:362;614:24;;;;;;;;;;;;;;;;;;:17;:24::i;:::-;601:10;:37;;;;682:10;;657:21;:35;;648:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;766:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:142::i;:::-;;553:362::o;356:190::-;479:20;:18;:20::i;:::-;465:34;;:10;:34;;;461:48;;501:8;;;461:48;532:6;519:4;:20;;;;;;;;;;;;:::i;:::-;;356:190;;:::o;15942:189:8:-;16121:1;16113:10;;16076:22;:34;16107:1;16099:10;;16076:34;;;;;;;;;;;:47;;;;15942:189;;;:::o;290:25:6:-;;;;:::o;267:17::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;922:82::-;962:12;993:4;986:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:82;:::o;16139:158:8:-;16223:16;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;16259:8:::1;::::0;::::1;;;;;;;;:17;;;16277:11;16259:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;16252:37;;16139:158:::0;;;:::o;16498:360::-;16599:11;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;16623:10:::1;16636:8:::0;::::1;;;;;;;;;;:17;;;16654:11;16636:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;16623:43;;16713:6;16699:11;:20;16689:7;:30;16681:5;:38;16677:106;;;16743:1;16736:8:::0;::::1;;;;;;16677:106;16800:8;::::0;::::1;;;;;;;;:14;;;16822:5;16829:1;16832:11;16845:4;16800:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;16793:57;;;12502:1;16498:360:::0;;;;:::o;38172:132::-;38232:24;12271:1;12247:26;;12255:3;;;;;;;;;;;12247:26;;;12246:64;;;;12308:1;12279:25;12299:3;;;;;;;;;;;12279:11;:25::i;:::-;:30;12246:64;12242:132;;;12327:35;11893:1;12327:19;:35::i;:::-;;12242:132;12409:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12388:37;;12396:8;;;;;;;;;;12388:37;;;12384:108;;12463:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12442:8;;:38;;;;;;;;;;;;;;;;;;12384:108;38276:8:::1;::::0;::::1;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;38269:27;;38172:132:::0;:::o;38312:151::-;38371:10;38439:5;38427:18;38418:27;;38403:53;;;:::o;12996:208::-;13061:16;13175:21;:19;:21::i;:::-;13168:28;;12996:208;;;:::o;13488:2070::-;13537:16;13628:1;13570:55;13582:42;13570:11;:55::i;:::-;:59;13566:250;;;13682:42;13656:3;;:69;;;;;;;;;;;;;;;;;;13740:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13800:4;13793:11;;;;13566:250;13888:1;13830:55;13842:42;13830:11;:55::i;:::-;:59;13826:259;;;13950:42;13924:3;;:69;;;;;;;;;;;;;;;;;;14008:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;14069:4;14062:11;;;;13826:259;14157:1;14099:55;14111:42;14099:11;:55::i;:::-;:59;14095:254;;;14217:42;14191:3;;:69;;;;;;;;;;;;;;;;;;14275:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14333:4;14326:11;;;;14095:254;14421:1;14363:55;14375:42;14363:11;:55::i;:::-;:59;14359:258;;;14483:42;14457:3;;:69;;;;;;;;;;;;;;;;;;14541:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14601:4;14594:11;;;;14359:258;14689:1;14631:55;14643:42;14631:11;:55::i;:::-;:59;14627:256;;;14750:42;14724:3;;:69;;;;;;;;;;;;;;;;;;14808:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14867:4;14860:11;;;;14627:256;14955:1;14897:55;14909:42;14897:11;:55::i;:::-;:59;14893:205;;;15017:42;14991:3;;:69;;;;;;;;;;;;;;;;;;15082:4;15075:11;;;;14893:205;15170:1;15112:55;15124:42;15112:11;:55::i;:::-;:59;15108:204;;;15231:42;15205:3;;:69;;;;;;;;;;;;;;;;;;15296:4;15289:11;;;;15108:204;15384:1;15326:55;15338:42;15326:11;:55::i;:::-;:59;15322:206;;;15447:42;15421:3;;:69;;;;;;;;;;;;;;;;;;15512:4;15505:11;;;;15322:206;15545:5;15538:12;;13488:2070;;:::o;13212:127::-;13318:13;13294:21;:37;;;;;;;;;;;;:::i;:::-;;13212:127;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.0;\r\n\r\nimport './provableAPI.sol';\r\n\r\n// Template from web3examples github: https://github.com/web3examples/ethereum/blob/master/oracle_examples/provable_temperature.sol\r\ncontract OrmrOracle is usingProvable {\r\n   bytes public temp;\r\n   uint256 public priceOfUrl;\r\n   constructor() payable {}\r\n    \r\n   function __callback(bytes32 /* myid prevent warning*/ , string memory result ) override public {\r\n       if (msg.sender != provable_cbAddress()) revert();\r\n       temp = bytes(result);\r\n   }\r\n\r\n   function requestTemp() public payable {\r\n       priceOfUrl = provable_getPrice(\"URL\");\r\n       require (address(this).balance >= priceOfUrl,\r\n            \"please add some ETH to cover for the query fee\");\r\n       provable_query(\"URL\", \r\n            \"json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp\");\r\n   }\r\n\r\n   function getTemp() public view returns (bytes memory) {\r\n       return temp;\r\n   }\r\n    \r\n}\r\n",
  "sourcePath": "C:\\Users\\juria\\Documents\\GitHub\\BC3_Jurian\\PD-08\\contracts\\OrmrOracle.sol",
  "ast": {
    "absolutePath": "/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/OrmrOracle.sol",
    "exportedSymbols": {
      "OrmrOracle": [
        788
      ]
    },
    "id": 789,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 717,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 718,
        "nodeType": "ImportDirective",
        "scope": 789,
        "sourceUnit": 7250,
        "src": "60:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 719,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7249,
              "src": "247:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7249",
                "typeString": "contract usingProvable"
              }
            },
            "id": 720,
            "nodeType": "InheritanceSpecifier",
            "src": "247:13:6"
          }
        ],
        "contractDependencies": [
          7249
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 788,
        "linearizedBaseContracts": [
          788,
          7249
        ],
        "name": "OrmrOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "673402e5",
            "id": 722,
            "mutability": "mutable",
            "name": "temp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 788,
            "src": "267:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 721,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "267:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43d3b1be",
            "id": 724,
            "mutability": "mutable",
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 788,
            "src": "290:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "290:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "343:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 728,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:2:6"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:6"
            },
            "scope": 788,
            "src": "321:24:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1881
            ],
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "451:95:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "465:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "465:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 738,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "479:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "479:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "465:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 744,
                  "nodeType": "IfStatement",
                  "src": "461:48:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 741,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "501:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "501:8:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 743,
                    "nodeType": "ExpressionStatement",
                    "src": "501:8:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 745,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "519:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 748,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "532:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "526:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "519:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "519:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "435:8:6"
            },
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "376:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "412:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:59:6"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:6"
            },
            "scope": 788,
            "src": "356:190:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "591:324:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 756,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "601:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "632:5:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 757,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1924,
                          1942
                        ],
                        "referencedDeclaration": 1924,
                        "src": "614:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "614:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "601:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "601:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 765,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "665:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OrmrOracle_$788",
                                  "typeString": "contract OrmrOracle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OrmrOracle_$788",
                                  "typeString": "contract OrmrOracle"
                                }
                              ],
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "657:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 763,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "657:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "657:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "657:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 768,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "682:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "657:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:48:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "648:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:108:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "648:108:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:5:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d30313436346364363235266c6f63617469653d48656c6c65766f6574736c756973292e6c697665776565725b305d2e74656d70",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "802:105:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6ef671421028dc7fc83d36a6e25d8d8c115e15cdf328a917f5d44ae2ff8d3c4",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6ef671421028dc7fc83d36a6e25d8d8c115e15cdf328a917f5d44ae2ff8d3c4",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp\""
                        }
                      ],
                      "id": 773,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1982,
                        2024,
                        2070,
                        2114,
                        2157,
                        2202,
                        2251,
                        2298,
                        2345,
                        2394,
                        2447,
                        2498,
                        2536,
                        2577,
                        2621,
                        2662,
                        2708,
                        2757,
                        2809,
                        2858,
                        2912,
                        2969,
                        3029,
                        3086,
                        3148,
                        3213,
                        3281,
                        3346,
                        3416,
                        3489,
                        3565,
                        3638,
                        3685,
                        3734,
                        3787,
                        3838,
                        3876,
                        3917,
                        3961,
                        4002,
                        4048,
                        4097,
                        4149,
                        4198,
                        4252,
                        4309,
                        4369,
                        4426,
                        4488,
                        4553,
                        4621,
                        4686,
                        4756,
                        4829,
                        4905,
                        4978
                      ],
                      "referencedDeclaration": 1982,
                      "src": "766:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:142:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "766:142:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "13fdba3c",
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:2:6"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:6"
            },
            "scope": 788,
            "src": "553:362:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "976:28:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 784,
                    "name": "temp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 722,
                    "src": "993:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 783,
                  "id": 785,
                  "nodeType": "Return",
                  "src": "986:11:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95252560",
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:2:6"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 787,
                  "src": "962:12:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:14:6"
            },
            "scope": 788,
            "src": "922:82:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 789,
        "src": "224:789:6"
      }
    ],
    "src": "33:982:6"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/OrmrOracle.sol",
    "exportedSymbols": {
      "OrmrOracle": [
        788
      ]
    },
    "id": 789,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 717,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/C/Users/juria/Documents/GitHub/BC3_Jurian/PD-08/contracts/provableAPI.sol",
        "file": "./provableAPI.sol",
        "id": 718,
        "nodeType": "ImportDirective",
        "scope": 789,
        "sourceUnit": 7250,
        "src": "60:27:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 719,
              "name": "usingProvable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7249,
              "src": "247:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingProvable_$7249",
                "typeString": "contract usingProvable"
              }
            },
            "id": 720,
            "nodeType": "InheritanceSpecifier",
            "src": "247:13:6"
          }
        ],
        "contractDependencies": [
          7249
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 788,
        "linearizedBaseContracts": [
          788,
          7249
        ],
        "name": "OrmrOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "673402e5",
            "id": 722,
            "mutability": "mutable",
            "name": "temp",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 788,
            "src": "267:17:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 721,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "267:5:6",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "43d3b1be",
            "id": 724,
            "mutability": "mutable",
            "name": "priceOfUrl",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 788,
            "src": "290:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 723,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "290:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "343:2:6",
              "statements": []
            },
            "documentation": null,
            "id": 728,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:2:6"
            },
            "returnParameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "343:0:6"
            },
            "scope": 788,
            "src": "321:24:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1881
            ],
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "451:95:6",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 736,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "465:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "465:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 738,
                        "name": "provable_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "479:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "479:20:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "465:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 744,
                  "nodeType": "IfStatement",
                  "src": "461:48:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 741,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          -19,
                          -19
                        ],
                        "referencedDeclaration": -19,
                        "src": "501:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "501:8:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 743,
                    "nodeType": "ExpressionStatement",
                    "src": "501:8:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 745,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "519:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 748,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 732,
                          "src": "532:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "526:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "526:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          }
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:13:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "519:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "519:20:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "27dc297e",
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "435:8:6"
            },
            "parameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "376:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "mutability": "mutable",
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 753,
                  "src": "412:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "375:59:6"
            },
            "returnParameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:6"
            },
            "scope": 788,
            "src": "356:190:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 778,
              "nodeType": "Block",
              "src": "591:324:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 756,
                      "name": "priceOfUrl",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "601:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "632:5:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          }
                        ],
                        "id": 757,
                        "name": "provable_getPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          1924,
                          1942
                        ],
                        "referencedDeclaration": 1924,
                        "src": "614:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) returns (uint256)"
                        }
                      },
                      "id": 759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "614:24:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "601:37:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 761,
                  "nodeType": "ExpressionStatement",
                  "src": "601:37:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 765,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "665:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OrmrOracle_$788",
                                  "typeString": "contract OrmrOracle"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OrmrOracle_$788",
                                  "typeString": "contract OrmrOracle"
                                }
                              ],
                              "id": 764,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "657:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 763,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "657:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 766,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "657:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "657:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 768,
                          "name": "priceOfUrl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 724,
                          "src": "682:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "657:35:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "706c656173652061646420736f6d652045544820746f20636f76657220666f722074686520717565727920666565",
                        "id": 770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "707:48:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        },
                        "value": "please add some ETH to cover for the query fee"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c51b6d051996220713a2387f79fd852fa993a793c4089ba5e0182d4204d983",
                          "typeString": "literal_string \"please add some ETH to cover for the query fee\""
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "648:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:108:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 772,
                  "nodeType": "ExpressionStatement",
                  "src": "648:108:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:5:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f776565726c6976652e6e6c2f6170692f6a736f6e2d646174612d31306d696e2e7068703f6b65793d30313436346364363235266c6f63617469653d48656c6c65766f6574736c756973292e6c697665776565725b305d2e74656d70",
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "802:105:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6ef671421028dc7fc83d36a6e25d8d8c115e15cdf328a917f5d44ae2ff8d3c4",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp\""
                        },
                        "value": "json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6ef671421028dc7fc83d36a6e25d8d8c115e15cdf328a917f5d44ae2ff8d3c4",
                          "typeString": "literal_string \"json(http://weerlive.nl/api/json-data-10min.php?key=01464cd625&locatie=Hellevoetsluis).liveweer[0].temp\""
                        }
                      ],
                      "id": 773,
                      "name": "provable_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1982,
                        2024,
                        2070,
                        2114,
                        2157,
                        2202,
                        2251,
                        2298,
                        2345,
                        2394,
                        2447,
                        2498,
                        2536,
                        2577,
                        2621,
                        2662,
                        2708,
                        2757,
                        2809,
                        2858,
                        2912,
                        2969,
                        3029,
                        3086,
                        3148,
                        3213,
                        3281,
                        3346,
                        3416,
                        3489,
                        3565,
                        3638,
                        3685,
                        3734,
                        3787,
                        3838,
                        3876,
                        3917,
                        3961,
                        4002,
                        4048,
                        4097,
                        4149,
                        4198,
                        4252,
                        4309,
                        4369,
                        4426,
                        4488,
                        4553,
                        4621,
                        4686,
                        4756,
                        4829,
                        4905,
                        4978
                      ],
                      "referencedDeclaration": 1982,
                      "src": "766:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:142:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "766:142:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "13fdba3c",
            "id": 779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requestTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:2:6"
            },
            "returnParameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "591:0:6"
            },
            "scope": 788,
            "src": "553:362:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 786,
              "nodeType": "Block",
              "src": "976:28:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 784,
                    "name": "temp",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 722,
                    "src": "993:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "functionReturnParameters": 783,
                  "id": 785,
                  "nodeType": "Return",
                  "src": "986:11:6"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "95252560",
            "id": 787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTemp",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:2:6"
            },
            "returnParameters": {
              "id": 783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 782,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 787,
                  "src": "962:12:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 781,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "961:14:6"
            },
            "scope": 788,
            "src": "922:82:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 789,
        "src": "224:789:6"
      }
    ],
    "src": "33:982:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-15T15:36:16.979Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}